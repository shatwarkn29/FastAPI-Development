name: Pylinton

on:
  push:
    paths-ignore:
      - ".github/workflows/*"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for Existing Python Installation
        run: |
          python3 --version > /dev/null 2>&1 
          if [ $? -eq 0 ]; then
            echo "Python 3 is already installed."
          else
            echo "Installing Python 3.12.3"
            uses: actions/setup-python@v3
            with:
              python-version: 3.12.3
          fi

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12.3-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12.3-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Analyze the code with pylint
        run: |
          pylint $(git ls-files '*.py') > pylint_report.txt

      - name: Check Pylint Score
        run: |
          # Extract the final score from the report (adjust the regex if needed)
          score=$(grep -oP 'Your code has been rated at \K\d+\.\d+' pylint_report.txt) 
          # Set a threshold for acceptable score (e.g., 8.0)
          threshold=8.0
          if (( $(echo "$score > $threshold" | bc -l) )); then
            echo "Pylint score ($score) meets the threshold ($threshold)"
          else
            echo "Pylint score ($score) does not meet the threshold ($threshold)"
            exit 1 
          fi
